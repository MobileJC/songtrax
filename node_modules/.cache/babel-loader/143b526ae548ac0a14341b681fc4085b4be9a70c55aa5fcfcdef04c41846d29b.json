{"ast":null,"code":"var _jsxFileName = \"/Users/mobilejc/Documents/COMP2140/assessments/A2React/songtrax/src/pages/SampleCreateEdit.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, NavLink, useParams, useNavigate } from 'react-router-dom';\nimport Header from './../components/Header';\nimport Footer from './../components/Footer';\nimport getCurrentDateTime from '../data/GetDateTime';\nimport { getSampleById, createSample, editSample } from '../data/api';\nimport './../starterstyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst instrumentType = [{\n  type: \"Piano\",\n  selectedStatus: true\n}, {\n  type: \"Frech Horn\",\n  selectedStatus: false\n}, {\n  type: \"Guitar\",\n  selectedStatus: false\n}, {\n  type: \"Drums\",\n  selectedStatus: false\n}];\nconst keys = [{\n  \"B\": [true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"A\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"G\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"F\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"E\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"D\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}, {\n  \"C\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n}];\nconst baseURL = 'https://comp2140.uqcloud.net/api/sample/';\nlet sampleID = 0;\nconst strSampleID = sampleID ? sampleID.toString() : \"\";\nconst APIKEY = '?api_key=gdJY8BdnNf';\nconst pureAPIKEY = 'gdJY8BdnNf';\nconst url = `${baseURL}${strSampleID}${APIKEY}`;\nconst songName = \"test\";\nconst EditSamplepage = () => {\n  _s();\n  // Extracts the \"id\" param from the route.\n  const {\n    id\n  } = useParams();\n\n  // Local state for holding the sample's instrument and keys.\n  const [samples, setSamples] = useState({\n    instrument: '',\n    keys: []\n  });\n\n  // Fetches sample by id if it's has been created before.\n  useEffect(() => {\n    if (id !== '') {\n      const fetchSample = async () => {\n        const data = await getSampleById(id);\n        setSamples(data);\n      };\n      fetchSample();\n    }\n  }, [id]);\n};\n_s(EditSamplepage, \"SyirXP4P3/1n6HMizyfDvjv9n90=\", false, function () {\n  return [useParams];\n});\n_c = EditSamplepage;\nconst SampleCreateEdit = async e => {\n  _s2();\n  const [isSaving, setIsSaving] = useState(false);\n  e.preventDefault();\n  // Extracts the \"id\" param from the route.\n  const {\n    id\n  } = useParams();\n\n  // Local state for holding the sample's instrument and keys.\n  const [samples, setSamples] = useState({\n    instrument: '',\n    keys: []\n  });\n\n  // Fetches sample by id if it's has been created before.\n  /*  useEffect(() => {\n       if (id !== '') {\n           const fetchSample = async() => {\n               const data = await getSampleById(id);\n               setSamples(data);\n           };\n           fetchSample();\n       }\n   }, [id]); */\n\n  useEffect(() => {\n    const fetchSample = async () => {\n      if (id !== '') {\n        try {\n          const data = await getSampleById(id);\n          setSamples(data);\n        } catch (error) {\n          // Handle the error\n          console.error(\"Error fetching sample by ID:\", error);\n        }\n      }\n    };\n    fetchSample();\n  }, [id]);\n  const [instsType, setInstsSelection] = useState(instrumentType);\n  const toggleInstrument = inst => {\n    const instResult = instsType.map(_inst => ({\n      ..._inst,\n      selectedStatus: _inst.type === inst.type\n    }));\n    setInstsSelection(instResult);\n  };\n  const [key, setKeys] = useState(keys);\n  const toggleNotes = (note, noteSelection) => {\n    const newKeys = [...keys];\n    const noteKey = Object.keys(newKeys[note])[0];\n    newKeys[note][noteKey][noteSelection] = !newKeys[note][noteKey][noteSelection];\n    setKeys(newKeys);\n  };\n\n  /* const togglePreview = (prev) => {\n      let prevResult = preview.filter((_prev) => _prev.previewStatus !== prev.previewStatus);\n      setPreviewing([...prevResult, {...prev, selectedStatus: !prev.selectedStatus}]);\n  } */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Edit Sample:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"card edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"Submit\",\n            className: \"bright-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-row-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-label\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instrument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sequence-row-container\",\n          children: instsType.map(inst => /*#__PURE__*/_jsxDEV(SelectInstrument, {\n            instrument: inst.type,\n            selected: inst.selectedStatus,\n            toggleSelection: () => toggleInstrument(inst)\n          }, inst.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), keys.map((keyObject, index) => {\n        const keyName = Object.keys(keyObject)[0];\n        const keyStatuses = keyObject[keyName];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-row-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-label\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: keyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sequence-row-container\",\n            children: keyStatuses.map((status, buttonIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: status ? \"toggle-selected\" : \"toggle\",\n              onClick: () => toggleNotes(index, buttonIndex)\n            }, `button-${keyName}-${buttonIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, keyName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(SampleCreateEdit, \"15sDp0Dpd44oyGUOlKDaWXFyowE=\", false, function () {\n  return [useParams];\n});\n_c2 = SampleCreateEdit;\nfunction SelectInstrument({\n  instrument,\n  selected,\n  toggleSelection\n}) {\n  const handleClick = () => {\n    toggleSelection();\n  };\n  const buttonClass = selected ? 'toggle-selected' : 'toggle';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonClass,\n    onClick: handleClick,\n    children: instrument\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SelectInstrument;\nfunction Preview({\n  toneObject,\n  toneTransport,\n  tonePart\n}) {\n  _s3();\n  const initialPreviewing = false;\n  const [previewing, setPreviewing] = useState(initialPreviewing);\n  function handleButtonClick() {\n    toneObject.start();\n    toneTransport.stop();\n    if (previewing) {\n      setPreviewing(false);\n      console.log(\"Preview stopped manually.\");\n    } else {\n      setPreviewing(true);\n      console.log(\"Preview started.\");\n      toneTransport.start();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleButtonClick,\n    className: previewing ? \"toggle-selected\" : \"toggle\",\n    children: previewing ? \"Stop Previewing\" : \"Previewing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 12\n  }, this);\n}\n_s3(Preview, \"6WpevstZuCV79Yxb1mTiX7LCfiM=\");\n_c4 = Preview;\nexport default SampleCreateEdit;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EditSamplepage\");\n$RefreshReg$(_c2, \"SampleCreateEdit\");\n$RefreshReg$(_c3, \"SelectInstrument\");\n$RefreshReg$(_c4, \"Preview\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","NavLink","useParams","useNavigate","Header","Footer","getCurrentDateTime","getSampleById","createSample","editSample","jsxDEV","_jsxDEV","Fragment","_Fragment","instrumentType","type","selectedStatus","keys","baseURL","sampleID","strSampleID","toString","APIKEY","pureAPIKEY","url","songName","EditSamplepage","_s","id","samples","setSamples","instrument","fetchSample","data","_c","SampleCreateEdit","e","_s2","isSaving","setIsSaving","preventDefault","error","console","instsType","setInstsSelection","toggleInstrument","inst","instResult","map","_inst","key","setKeys","toggleNotes","note","noteSelection","newKeys","noteKey","Object","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","SelectInstrument","selected","toggleSelection","keyObject","index","keyName","keyStatuses","status","buttonIndex","onClick","_c2","handleClick","buttonClass","_c3","Preview","toneObject","toneTransport","tonePart","_s3","initialPreviewing","previewing","setPreviewing","handleButtonClick","start","stop","log","_c4","$RefreshReg$"],"sources":["/Users/mobilejc/Documents/COMP2140/assessments/A2React/songtrax/src/pages/SampleCreateEdit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, NavLink, useParams, useNavigate } from 'react-router-dom';\nimport Header from './../components/Header';\nimport Footer from './../components/Footer';\nimport getCurrentDateTime from '../data/GetDateTime';\nimport { getSampleById, createSample, editSample } from '../data/api';\nimport './../starterstyles.css';\n\nconst instrumentType = [\n    {type: \"Piano\", selectedStatus: true},\n    {type: \"Frech Horn\", selectedStatus: false},\n    {type: \"Guitar\", selectedStatus: false},\n    {type: \"Drums\", selectedStatus: false}\n];\n\nconst keys = [\n    {\"B\": [true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"A\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"G\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"F\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"E\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"D\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]},\n\t{\"C\": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]}\n];\n\n\nconst baseURL = 'https://comp2140.uqcloud.net/api/sample/';\n\nlet sampleID = 0;\n\nconst strSampleID = sampleID ? sampleID.toString() : \"\";\n\nconst APIKEY = '?api_key=gdJY8BdnNf';\n\nconst pureAPIKEY = 'gdJY8BdnNf';\n\nconst url = `${baseURL}${strSampleID}${APIKEY}`;\n\nconst songName = \"test\";\n\nconst EditSamplepage = () => {\n    \n     // Extracts the \"id\" param from the route.\n     const { id } = useParams();\n\n     // Local state for holding the sample's instrument and keys.\n     const [samples, setSamples] = useState({instrument: '', keys: [], });\n     \n     // Fetches sample by id if it's has been created before.\n     useEffect(() => {\n         if (id !== '') {\n             const fetchSample = async() => {\n                 const data = await getSampleById(id);\n                 setSamples(data);\n             };\n             fetchSample();\n         }\n     }, [id]);\n}\n\nconst SampleCreateEdit = async (e) => {\n\n    const [isSaving, setIsSaving] = useState(false);\n\n    e.preventDefault();\n    // Extracts the \"id\" param from the route.\n    const { id } = useParams();\n\n    // Local state for holding the sample's instrument and keys.\n    const [samples, setSamples] = useState({instrument: '', keys: [], });\n    \n    // Fetches sample by id if it's has been created before.\n   /*  useEffect(() => {\n        if (id !== '') {\n            const fetchSample = async() => {\n                const data = await getSampleById(id);\n                setSamples(data);\n            };\n            fetchSample();\n        }\n    }, [id]); */\n\n    useEffect(() => {\n        const fetchSample = async () => {\n            if (id !== '') {\n                try {\n                    const data = await getSampleById(id);\n                    setSamples(data);\n                } catch (error) {\n                    // Handle the error\n                    console.error(\"Error fetching sample by ID:\", error);\n                }\n            }\n        };\n\n        fetchSample();\n    }, [id]);\n\n    const [instsType, setInstsSelection] = useState(instrumentType);\n\n    const toggleInstrument = (inst) => {\n        const instResult = instsType.map((_inst) => ({\n            ..._inst,\n            selectedStatus: _inst.type === inst.type,\n          }));\n          setInstsSelection(instResult);\n    };\n    \n    const [key, setKeys] = useState(keys);\n\n    const toggleNotes = (note, noteSelection) => {\n        const newKeys = [...keys];\n        const noteKey = Object.keys(newKeys[note])[0];\n        newKeys[note][noteKey][noteSelection] = !newKeys[note][noteKey][noteSelection];\n        setKeys(newKeys);\n    };\n    \n    /* const togglePreview = (prev) => {\n        let prevResult = preview.filter((_prev) => _prev.previewStatus !== prev.previewStatus);\n        setPreviewing([...prevResult, {...prev, selectedStatus: !prev.selectedStatus}]);\n    } */\n\n    return (\n        <>\n            <main>\n                <h2 className=\"title\">Edit Sample:</h2>\n                <form className=\"card edit-card\">\n                    <input type=\"text\" placeholder={songName} ></input>\n                    <div className=\"button-group-container\">\n                        <button type=\"button\" className=\"button\">Preview</button>\n                        <button type=\"Submit\" className=\"bright-button\">Save</button>\n                    </div>\n                </form>\n\n                <div className=\"toggle-row-container\">\n                    <div className=\"row-label\">\n                        <h4>Instrument</h4>\n                    </div>\n                    <div className=\"sequence-row-container\">\n                    {instsType.map((inst) => (\n                            <SelectInstrument\n                            key={inst.type}\n                            instrument={inst.type}\n                            selected={inst.selectedStatus}\n                            toggleSelection={() => toggleInstrument(inst)}\n                          />\n                        ))}\n                    </div>\n                </div>\n\n                {keys.map((keyObject, index) => {\n                    const keyName = Object.keys(keyObject)[0];\n                    const keyStatuses = keyObject[keyName];\n\n                    return (\n                    <div key={keyName} className=\"toggle-row-container\">\n                        <div className=\"row-label\">\n                            <h4>{keyName}</h4>\n                        </div>\n                        <div className=\"sequence-row-container\">\n                            {keyStatuses.map((status, buttonIndex) => (\n                                <button\n                                className={status ? \"toggle-selected\" : \"toggle\"}\n                                key={`button-${keyName}-${buttonIndex}`}\n                                onClick={() => toggleNotes(index, buttonIndex)}\n                              ></button>\n                            ))}\n                        </div>\n                    </div>\n                    );\n                })}\n\n            </main>\n        </>\n    ); \n};\n\nfunction SelectInstrument({instrument, selected, toggleSelection}) {\n    const handleClick = () => {\n        toggleSelection();\n    }   \n\n    const buttonClass = selected ? 'toggle-selected' : 'toggle';\n\n  return (\n    <button className={buttonClass} onClick={handleClick}>\n      {instrument}\n    </button>\n  );\n}\n\nfunction Preview({ toneObject, toneTransport, tonePart}) {\n\n    const initialPreviewing = false;\n    const [previewing, setPreviewing] = useState(initialPreviewing);\n\n    function handleButtonClick() {\n\n        toneObject.start();\n        toneTransport.stop();\n\n        if(previewing) {\n            setPreviewing(false);\n            console.log(\"Preview stopped manually.\");\n        }\n        else {\n            setPreviewing(true);\n            console.log(\"Preview started.\");\n            toneTransport.start();\n        }\n\n    }\n\n    return <button onClick={handleButtonClick} className={previewing ? \"toggle-selected\" : \"toggle\"}>{previewing ? \"Stop Previewing\" : \"Previewing\"}</button>\n}\n\nexport default SampleCreateEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}