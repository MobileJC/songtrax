{"ast":null,"code":"import * as Tone from \"tone\";\nexport const toneObject = Tone;\nexport const toneTransport = toneObject.Transport;\nexport const pianoTap = new toneObject.Part((time, note) => {\n  piano.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const frenchHornTap = new toneObject.Part((time, note) => {\n  frenchHorn.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const guitarTap = new toneObject.Part((time, note) => {\n  guitar.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const drumTap = new toneObject.Part((time, note) => {\n  drum.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const synth = new toneObject.PolySynth().toDestination();\nexport const piano = new toneObject.Sampler({\n  urls: {\n    \"B3\": \"B3.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"F3\": \"F3.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"C3\": \"C3.mp3\"\n  },\n  release: 1,\n  baseUrl: \"samples/piano-acoustic/\"\n}).toDestination();\nexport const frenchHorn = new toneObject.Sampler({\n  urls: {\n    \"B3\": \"B3.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"F3\": \"F3.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"C3\": \"C3.mp3\"\n  },\n  release: 1,\n  baseUrl: \"samples/french-horn-acoustic/\"\n}).toDestination();\nexport const guitar = new toneObject.Sampler({\n  urls: {\n    \"B3\": \"B3.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"F3\": \"F3.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"C3\": \"C3.mp3\"\n  },\n  release: 1,\n  baseUrl: \"samples/guitar-acoustic/\"\n}).toDestination();\nexport const drum = new toneObject.Sampler({\n  urls: {\n    \"B3\": \"B3.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"F3\": \"F3.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"C3\": \"C3.mp3\"\n  },\n  release: 1,\n  baseUrl: \"samples/drum-acoustic/\"\n}).toDestination();","map":{"version":3,"names":["Tone","toneObject","toneTransport","Transport","pianoTap","Part","time","note","piano","triggerAttackRelease","start","frenchHornTap","frenchHorn","guitarTap","guitar","drumTap","drum","synth","PolySynth","toDestination","Sampler","urls","release","baseUrl"],"sources":["/Users/mobilejc/Documents/COMP2140/assessments/A2React/songtrax/src/data/ToneInstrument.js"],"sourcesContent":["import * as Tone from \"tone\";\n\nexport const toneObject = Tone;\n\nexport const toneTransport = toneObject.Transport;\n\nexport const pianoTap = new toneObject.Part((time, note) => {\n    piano.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const frenchHornTap = new toneObject.Part((time, note) => {\n    frenchHorn.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const guitarTap = new toneObject.Part((time, note) => {\n    guitar.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const drumTap = new toneObject.Part((time, note) => {\n    drum.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const synth = new toneObject.PolySynth().toDestination();\n\nexport const piano = new toneObject.Sampler({\n    urls: {\n        \"B3\": \"B3.mp3\",\n        \"A3\": \"A3.mp3\",\n        \"G3\": \"G3.mp3\",\n        \"F3\": \"F3.mp3\",\n        \"E3\": \"E3.mp3\",\n        \"D3\": \"D3.mp3\",\n        \"C3\": \"C3.mp3\",\n    },\n    release: 1,\n    baseUrl: \"samples/piano-acoustic/\"\n}).toDestination();\n\nexport const frenchHorn = new toneObject.Sampler({\n    urls: {\n        \"B3\": \"B3.mp3\",\n        \"A3\": \"A3.mp3\",\n        \"G3\": \"G3.mp3\",\n        \"F3\": \"F3.mp3\",\n        \"E3\": \"E3.mp3\",\n        \"D3\": \"D3.mp3\",\n        \"C3\": \"C3.mp3\",\n    },\n    release: 1,\n    baseUrl: \"samples/french-horn-acoustic/\"\n}).toDestination();\n\nexport const guitar = new toneObject.Sampler({\n    urls: {\n        \"B3\": \"B3.mp3\",\n        \"A3\": \"A3.mp3\",\n        \"G3\": \"G3.mp3\",\n        \"F3\": \"F3.mp3\",\n        \"E3\": \"E3.mp3\",\n        \"D3\": \"D3.mp3\",\n        \"C3\": \"C3.mp3\",\n    },\n    release: 1,\n    baseUrl: \"samples/guitar-acoustic/\"\n}).toDestination();\n\nexport const drum = new toneObject.Sampler({\n    urls: {\n        \"B3\": \"B3.mp3\",\n        \"A3\": \"A3.mp3\",\n        \"G3\": \"G3.mp3\",\n        \"F3\": \"F3.mp3\",\n        \"E3\": \"E3.mp3\",\n        \"D3\": \"D3.mp3\",\n        \"C3\": \"C3.mp3\",\n    },\n    release: 1,\n    baseUrl: \"samples/drum-acoustic/\"\n}).toDestination();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}